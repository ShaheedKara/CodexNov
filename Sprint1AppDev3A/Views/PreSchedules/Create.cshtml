@model Sprint1AppDev3A.Models.PreSchedule

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PreSchedule</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.ContainerSize, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContainerSize, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContainerSize, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.ContainerSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ContainerSize", new List<SelectListItem>
                    {
                    new SelectListItem {Value = "6m", Text = "6m"},
                   new SelectListItem {Value = "12m", Text = "12m"},



                   }, "Select Size:")
                @Html.ValidationMessageFor(model => model.ContainerSize, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.pickupLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pickupLocation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pickupLocation, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.pickupLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("pickupLocation", new List<SelectListItem>
                    {
                    new SelectListItem {Value = "Shipping & General Transport Services Pty Ltd, 61 Grunter Gully St, Bayhead, Durban", Text = "Shipping & General"},
                    new SelectListItem {Value = "Oilco Durban, 45 Leeds Rd, Umbilo Industrial, Durban, 4075", Text = "Oilco"},
                    new SelectListItem {Value = "Durban Deliveries, 72 Magwaza Maphalala St, Congela, Durban, 4001", Text = "Durban Deliveries"},
                    new SelectListItem {Value = "IMPERIAL LOGISTICS, 01 Davey Rd, Maydon Wharf, Durban, 2934", Text = "Imperial Logistics"},
                    new SelectListItem {Value = "UNITRANS FREIGHT & LOGISTICS, 144 Umhlatuzana Rd, Sea View, Durban, 4094", Text = "Unitrans"},


                                }, "Select Special Instruction:")
                @Html.ValidationMessageFor(model => model.pickupLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.dropoffLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.dropoffLocation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dropoffLocation, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.dropoffLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("dropoffLocation", new List<SelectListItem>
                    {
                    new SelectListItem {Value = "Durban", Text = "Durban"},
                   new SelectListItem {Value = "JHB", Text = "JHB"},



                   }, "Select Size:")
                @Html.ValidationMessageFor(model => model.dropoffLocation, "", new { @class = "text-danger" })
            </div>
        </div>



        @*<div class="form-group">
                @Html.LabelFor(model => model.transportType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.transportType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.transportType, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.transportType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("transportType", new List<SelectListItem>
                    {
                    new SelectListItem {Value = "Truck", Text = "Truck"},




                   }, "Select Size:")
                @Html.ValidationMessageFor(model => model.transportType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.start, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.start, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.start, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.end, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.end, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.end, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.transit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.transit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.transit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Booked, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Booked)
                    @Html.ValidationMessageFor(model => model.Booked, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.id, "id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


        
       