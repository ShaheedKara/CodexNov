@model Sprint1AppDev3A.Models.Invoice

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Invoice</h4>
    <hr />
    @*<dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.jobId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.jobId)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.email)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.email)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.number)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.number)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.pickup)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.pickup)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.dropoff)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.dropoff)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ConType)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ConType)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Size)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Size)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.total)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.total)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.vattotal)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.vattotal)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.net)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.net)
                </dd>

            </dl>
        </div>*@
    <form class="form" style="max-width: none; width: 1005px;">


        <center>
            <h2 style="color: #0094ff">OCEAN LAND LOGISTICS</h2>
        </center>
        @*<h3>a bit about this Project:</h3>*@
        <center>
            <img src="~/IMG/logo.png" alt="Paris" width="100" height="100">
        </center>
        <center>
            <p style="font-size: large">
                CLIENT INVOICE
        </center>



        <dt>
            @Html.DisplayNameFor(model => model.jobId) @Html.DisplayFor(model => model.jobId)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.jobId)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.name) @Html.DisplayFor(model => model.name)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.name)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.email) @Html.DisplayFor(model => model.email)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.email)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.number) @Html.DisplayFor(model => model.number)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.number)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.pickup) @Html.DisplayFor(model => model.pickup)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.pickup)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.dropoff) @Html.DisplayFor(model => model.dropoff)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.dropoff)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.ConType) @Html.DisplayFor(model => model.ConType)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.ConType)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.Size) @Html.DisplayFor(model => model.Size)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.Size)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.total)     @Html.DisplayFor(model => model.total)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.total)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.vattotal)                                                   @Html.DisplayFor(model => model.vattotal)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.vattotal)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.net)                                                        @Html.DisplayFor(model => model.net)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.net)
            </dd>*@
        <center>
            <h2 style="color: #0094ff">THANK YOU FOR YOUR SUPPORT</h2>
        </center>

        <input type="button" id="create_pdf" value="Generate PDF">

    </form>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>

    @using (Html.BeginForm())
    {

    }
    <style>
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        td, th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #dddddd;
        }
    </style>

    <script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.5/jspdf.min.js"></script>
    <script>

    (function () {
        var
         form = $('.form'),
         cache_width = form.width(),
         a4 = [595.28, 841.89]; // for a4 size paper width and height

        $('#create_pdf').on('click', function () {
            $('body').scrollTop(0);
            createPDF();
        });
        //create pdf
        function createPDF() {
            getCanvas().then(function (canvas) {
                var
                 img = canvas.toDataURL("image/png"),
                 doc = new jsPDF({
                     unit: 'px',
                     format: 'a4'
                 });
                doc.addImage(img, 'JPEG', 20, 20);
                doc.save('Bhavdip-html-to-pdf.pdf');
                form.width(cache_width);
            });
        }

        // create canvas object
        function getCanvas() {
            form.width((a4[0] * 1.33333) - 80).css('max-width', 'none');
            return html2canvas(form, {
                imageTimeout: 2000,
                removeContainer: true
            });
        }

    }());
    </script>
    <script>

    /*
 * jQuery helper plugin for examples and tests
 */
    (function ($) {
        $.fn.html2canvas = function (options) {
            var date = new Date(),
            $message = null,
            timeoutTimer = false,
            timer = date.getTime();
            html2canvas.logging = options && options.logging;
            html2canvas.Preload(this[0], $.extend({
                complete: function (images) {
                    var queue = html2canvas.Parse(this[0], images, options),
                    $canvas = $(html2canvas.Renderer(queue, options)),
                    finishTime = new Date();

                    $canvas.css({ position: 'absolute', left: 0, top: 0 }).appendTo(document.body);
                    $canvas.siblings().toggle();

                    $(window).click(function () {
                        if (!$canvas.is(':visible')) {
                            $canvas.toggle().siblings().toggle();
                            throwMessage("Canvas Render visible");
                        } else {
                            $canvas.siblings().toggle();
                            $canvas.toggle();
                            throwMessage("Canvas Render hidden");
                        }
                    });
                    throwMessage('Screenshot created in ' + ((finishTime.getTime() - timer) / 1000) + " seconds<br />", 4000);
                }
            }, options));

            function throwMessage(msg, duration) {
                window.clearTimeout(timeoutTimer);
                timeoutTimer = window.setTimeout(function () {
                    $message.fadeOut(function () {
                        $message.remove();
                    });
                }, duration || 2000);
                if ($message)
                    $message.remove();
                $message = $('<div ></div>').html(msg).css({
                    margin: 0,
                    padding: 10,
                    background: "#000",
                    opacity: 0.7,
                    position: "fixed",
                    top: 10,
                    right: 10,
                    fontFamily: 'Tahoma',
                    color: '#fff',
                    fontSize: 12,
                    borderRadius: 12,
                    width: 'auto',
                    height: 'auto',
                    textAlign: 'center',
                    textDecoration: 'none'
                }).hide().fadeIn().appendTo('body');
            }
        };
    })(jQuery);

    </script>

